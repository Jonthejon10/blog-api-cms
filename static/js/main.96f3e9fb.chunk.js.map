{"version":3,"sources":["images/comments.svg","components/redux/token.js","components/redux/store.js","components/Navbar.js","components/Footer.js","components/Login.js","components/Posts.js","components/Newpost.js","components/Fullpost.js","App.js","index.js"],"names":["tokenSlice","createSlice","name","initialState","token","reducers","setToken","state","action","payload","actions","configureStore","reducer","tokenReducer","Navbar","navigate","useNavigate","useSelector","status","onClick","Footer","className","window","open","Login","dispatch","useDispatch","useState","user","setUser","handleChange","e","target","value","useEffect","onSubmit","event","preventDefault","fetch","method","headers","body","JSON","stringify","username","password","then","res","json","data","catch","err","console","log","type","placeholder","required","onChange","Posts","posts","setPosts","map","item","index","visible","title","author","timestamp","formatDistance","Date","src","require","default","alt","comments","length","_id","postId","currPost","find","x","obj","Authorization","text","refId","handleVisibility","id","filteredArr","filter","handleDelete","href","Newpost","post","setPost","handleSubmit","a","htmlFor","rows","cols","Fullpost","useParams","comment","setComment","editPost","setEditPost","resJson","error","fetchPostData","handleInputChange","handlePostEdit","reference","newArr","push","commentId","post_id","App","fetchData","exact","path","element","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"uMAAA,OAAe,cAA0B,sC,0JCE5BA,EAAaC,YAAY,CACrCC,KAAM,QACNC,aAAc,CACbC,MAAO,IAERC,SAAU,CACTC,SAAU,SAACC,EAAOC,GACjBD,EAAMH,MAAQI,EAAOC,YAKTH,EAAaN,EAAWU,QAAxBJ,SAEAN,IAAf,QCbeW,cAAe,CAC1BC,QAAS,CACLR,MAAOS,K,4DCsBAC,EAtBA,WACd,IAAMC,EAAWC,cAENZ,EAAUa,aAAY,SAACV,GAAD,OAAWA,EAAMH,SAAvCA,MAEX,OACC,8BACC,+BACmB,YAAjBA,EAAMc,QACN,oBAAIC,QAAS,kBAAMJ,EAAS,oBAA5B,kBAGiB,YAAjBX,EAAMc,QACN,oBAAIC,QAAS,kBAAMJ,EAAS,eAA5B,mBAGD,oBAAII,QAAS,kBAAMJ,EAAS,uBAA5B,4BCJWK,G,MAdA,WAMX,OACF,mCACC,uDACA,wBAAQC,UAAU,gBAAgBF,QAPb,WAChBG,OAAOC,KAAK,0C,cC+DLC,G,MA/DD,WACV,IAAMT,EAAWC,cAEdS,EAAWC,cAEd,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEKzB,EAAUa,aAAY,SAACV,GAAD,OAAWA,EAAMH,SAAvCA,MAGF0B,EAAe,SAACC,GACrBF,EAAQ,2BACJD,GADG,kBAELG,EAAEC,OAAO9B,KAAO6B,EAAEC,OAAOC,UA2B5B,OAPCC,qBAAU,WACW,YAAjB9B,EAAMc,QACTH,EAAS,qBAGR,CAACX,IAGH,qBAAKiB,UAAU,oCAAf,SACC,uBAAMc,SAzBgB,SAAAC,GACjBA,EAAMC,iBACNC,MAAM,uDAAwD,CACnEC,OAAQ,OACRC,QAAS,CACR,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAU,CACpBC,SAAUhB,EAAKgB,SACfC,SAAUjB,EAAKiB,aAGfC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUxB,EAASnB,EAAS2C,OACjCC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAW5B,UACC,uBACCG,KAAK,OACLpD,KAAK,WACLqD,YAAY,iBACZC,UAAU,EACVC,SAAU3B,IAEX,uBACCwB,KAAK,WACLpD,KAAK,WACLqD,YAAY,iBACZC,UAAU,EACVC,SAAU3B,IAEX,uBAAOwB,KAAK,kB,gBCqEDI,G,MA9HD,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAEjB7C,EAAWC,cAGTZ,EAAUa,aAAY,SAACV,GAAD,OAAWA,EAAMH,SAAvCA,MAsDR,OACC,sBAAKiB,UAAU,oCAAf,UACmB,YAAjBjB,EAAMc,QACNyC,EAAME,KAAI,SAACC,EAAMC,GAChB,OACC,sBAAiB1C,UAAS,yBAAoByC,EAAKE,QAAU,UAAY,UAAzE,UACC,6BAAKF,EAAKG,QACV,sCAASH,EAAKI,UAEbJ,EAAKK,WACL,8BACEC,YACA,IAAIC,KAAKP,EAAKK,WACd,IAAIE,MACF,IAJJ,SASD,sBAAKhD,UAAU,qBAAf,UACC,qBACCiD,IACCC,EAAQ,IACNC,QAEHC,IAAI,KAEL,+BAAOX,EAAKY,SAASC,YAGtB,qBAAKtD,UAAU,oBAAf,SACC,wBACCA,UAAU,cACVF,QAAS,kBACRJ,EAAS,mBAAqB+C,EAAKc,MAHrC,yBASD,sBAAKvD,UAAU,yBAAf,UAEC,wBACCA,UAAU,kCACVF,QAAS,kBA/FQ,SAAC0D,GACzB,IAAMC,EAAWnB,EAAMoB,MAAK,SAAAC,GAAC,OAAIA,EAAEJ,MAAQC,KAE3CjB,EAAS,YAAID,GAAOE,KAAI,SAAAoB,GACvB,OAAIA,EAAIL,MAAQE,EAASF,IACjB,2BACHK,GADJ,IAECjB,SAAUc,EAASd,UAGbiB,MAIT3C,MAAM,wDAAD,OAAyDuC,EAAzD,WAA0E,CAC9EtC,OAAQ,MACRC,QAAS,CACR,eAAgB,mBAChB0C,cAAe,UAAY9E,EAAMA,OAElCqC,KAAMC,KAAKC,UAAU,CACpBuB,OAAQY,EAASZ,OACjBC,UAAWW,EAASX,UACpBF,MAAOa,EAASb,MAChBkB,KAAML,EAASK,KACfT,SAAUI,EAASJ,SACnBV,SAAUc,EAASd,QACnBoB,MAAON,EAASF,QAEf1B,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAkERkC,CAAiBvB,EAAKc,QAEtC,wBACCvD,UAAU,iCACVF,QAAS,kBAlEI,SAAC0D,GACrBvC,MAAM,wDAAD,OACoDuC,EADpD,WAEJ,CACCtC,OAAQ,SACRC,QAAS,CACR,eAAgB,mBAChB0C,cAAe,UAAY9E,EAAMA,OAElCqC,KAAMC,KAAKC,UAAU,CACpB2C,GAAIT,MAIP,IAAMU,EAAc5B,EAAM6B,QAAO,SAAAR,GAAC,OAAIA,EAAEJ,MAAQC,KAChDjB,EAAS2B,GAmDaE,CAAa3B,EAAKc,aA3C1Bb,MAkDK,YAAjB3D,EAAMc,QACN,qBAAKG,UAAU,oBAAf,SACC,oDACmB,mBAAGqE,KAAK,aAAR,oBADnB,qBCxCUC,G,MA7EC,SAAC,GAAyB,IAAvBhC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACnB7C,EAAWC,cAEjB,EAAwBW,mBAAS,CAChC+C,SAAU,KADX,mBAAOkB,EAAP,KAAaC,EAAb,KAKQzF,EAAUa,aAAY,SAACV,GAAD,OAAWA,EAAMH,SAAvCA,MAEF0B,EAAe,SAACC,GACrB8D,EAAQ,2BACJD,GADG,kBAEL7D,EAAEC,OAAO9B,KAAO6B,EAAEC,OAAOC,UAKtB6D,EAAY,uCAAG,WAAO1D,GAAP,SAAA2D,EAAA,sDACpB3D,EAAMC,iBAENC,MAAM,uDAAwD,CAC7DC,OAAQ,OACRC,QAAS,CACR,eAAgB,mBAChB0C,cAAe,UAAY9E,EAAMA,OAElCqC,KAAMC,KAAKC,UAAU,CACpBuB,OAAQ,cACRD,MAAO2B,EAAK3B,MACZkB,KAAMS,EAAKT,SAEVjC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAE9BS,EAAS,GAAD,mBAAKD,GAAL,CAAYiC,KACpBC,EAAQ,CAAEnB,SAAU,KACpB3D,EAAS,mBAlBW,2CAAH,sDAqBlB,OACC,sBAAKM,UAAU,sCAAf,UACmB,YAAjBjB,EAAMc,QACN,uBAAMiB,SAAU2D,EAAhB,UACC,uBAAOE,QAAQ,QAAf,mBACA,uBACC1C,KAAK,OACLpD,KAAK,QACLoF,GAAG,QACH9B,UAAU,EACVC,SAAU3B,IAGX,uBAAOkE,QAAQ,OAAf,kBACA,0BACCV,GAAG,OACHpF,KAAK,OACLsD,UAAU,EACVyC,KAAK,IACLC,KAAK,KACLzC,SAAU3B,IAGX,uBAAOwB,KAAK,cAGI,YAAjBlD,EAAMc,QACN,qBAAKG,UAAU,oBAAf,SACC,oDACmB,mBAAGqE,KAAK,aAAR,oBADnB,qBCqLUS,G,MAvPE,SAAC,GAAyB,IAAvBxC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACpB7C,EAAWC,cAGTsE,EAAOc,cAAPd,GAER,EAAwB3D,mBAAS,IAAjC,mBAAOiE,EAAP,KAAaC,EAAb,KAEA,EAA8BlE,mBAAS,IAAvC,mBAAO0E,EAAP,KAAgBC,EAAhB,KAGQlG,EAAUa,aAAY,SAACV,GAAD,OAAWA,EAAMH,SAAvCA,MAER,EAAgCuB,oBAAS,GAAzC,mBAAO4E,EAAP,KAAiBC,EAAjB,KAbyC,4CAezC,8BAAAT,EAAA,+EAEoBzD,MAAM,wDAAD,OACkCgD,IAH3D,cAEQvC,EAFR,gBAKwBA,EAAIC,OAL5B,OAKQyD,EALR,OAMEZ,EAAQY,EAAQb,MANlB,kDAQExC,QAAQsD,MAAR,MARF,2DAfyC,sBA4BzCxE,qBAAU,YA5B+B,mCA6BxCyE,KAEE,CAACrB,EAAIe,IAGR,IAAMvE,EAAe,SAACC,GAErBuE,EAAW,2BACPD,GADM,kBAERtE,EAAEC,OAAO9B,KAAO6B,EAAEC,OAAOC,UA6CtB2E,EAAoB,SAAC7E,GAC1B8D,EAAQ,2BACJD,GADG,kBAEL7D,EAAEC,OAAO9B,KAAO6B,EAAEC,OAAOC,UAKtB4E,EAAiB,SAAC9E,GACvBA,EAAEM,iBACFmE,GAAY,GACZlE,MAAM,wDAAD,OAAyDgD,EAAzD,WAAsE,CAC1E/C,OAAQ,MACRC,QAAS,CACR,eAAgB,mBAChB0C,cAAe,UAAY9E,EAAMA,OAElCqC,KAAMC,KAAKC,UAAU,CACpBuB,OAAQ0B,EAAK1B,OACbC,UAAWyB,EAAKzB,UAChBF,MAAO2B,EAAK3B,MACZkB,KAAMS,EAAKT,KACXT,SAAUkB,EAAKlB,SACfV,QAAS4B,EAAK5B,QACdoB,MAAOE,MAENpC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAC9BS,EAAS,GAAD,mBAAKD,GAAL,CAAYiC,KAEpBhC,EACC,YAAID,GAAOE,KAAI,SAACoB,GACf,OAAIA,EAAIL,MAAQgB,EAAKhB,IACb,2BACHK,GADJ,IAEChB,MAAO2B,EAAK3B,MACZkB,KAAMS,EAAKT,KACXjB,OAAQ0B,EAAK1B,SAGPe,OAOX,OACC,sBAAK5D,UAAU,uCAAf,UACC,wBACCA,UAAU,aACVF,QAAS,kBAAMJ,EAAS,oBAFzB,qBAMA,6BAAK6E,EAAK3B,QACTsC,GACA,uBAAMpE,SAAU,SAACJ,GAAD,OAAO8E,EAAe9E,IAAtC,UACC,uBACCuB,KAAK,OACLpD,KAAK,QACL+B,MAAO2D,EAAK3B,MACZR,SAAU,SAAC1B,GAAD,OAAO6E,EAAkB7E,MAEpC,wBAAQuB,KAAK,SAASjC,UAAU,aAAhC,uBAKF,qCAAQuE,EAAK1B,UAEZqC,GACA,uBAAMpE,SAAU0E,EAAhB,UACC,uBACCvD,KAAK,OACLpD,KAAK,SACL+B,MAAO2D,EAAK1B,OACZT,SAAU,SAAC1B,GAAD,OAAO6E,EAAkB7E,MAEpC,wBAAQuB,KAAK,SAASjC,UAAU,aAAhC,uBAMDuE,EAAKzB,WACL,8BACEC,YAAe,IAAIC,KAAKuB,EAAKzB,WAAY,IAAIE,MAD/C,UAKD,mBAAGhD,UAAU,YAAb,SAA0BuE,EAAKT,OAE9BoB,GACA,uBAAMpE,SAAU0E,EAAhB,UACC,0BACCvD,KAAK,OACLpD,KAAK,OACL+B,MAAO2D,EAAKT,KACZ1B,SAAU,SAAC1B,GAAD,OAAO6E,EAAkB7E,MAEpC,wBAAQuB,KAAK,SAASjC,UAAU,aAAhC,uBAMF,wBACCiC,KAAK,SACLjC,UAAU,gBACVF,QAAS,kBAAMqF,GAAaD,MAG7B,uBAAMlF,UAAU,gBAAec,SAxJZ,SAACC,GACrBA,EAAMC,iBACJC,MAAM,wDAAD,OACkDgD,EADlD,aAEN,CACC/C,OAAQ,OACRC,QAAS,CACR,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAU,CACpBuB,OAAQmC,EAAQnC,OAChBiB,KAAMkB,EAAQlB,KACd2B,UAAWxB,MAGZpC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAC7B,IAAM4D,EAASnB,EAAKlB,SAASsC,KAAKX,GAClCR,EAAQ,2BAAKD,GAAN,IAAYmB,YACnBT,EAAW,KAsIV,UACC,wDACA,uBACChD,KAAK,OACLE,UAAU,EACVtD,KAAK,SACLuD,SAAU3B,EACVyB,YAAY,oBACb,0BACCD,KAAK,OACLE,UAAU,EACVtD,KAAK,OACLuD,SAAU3B,EACVmE,KAAK,IACL1C,YAAY,uBACb,wBAAQD,KAAK,SAASjC,UAAU,aAAhC,uBAKD,qBAAKA,UAAU,0BAAf,SACEuE,EAAKlB,UACLkB,EAAKlB,SAASb,KAAI,SAACC,EAAMC,GACxB,OACC,sBAAiB1C,UAAU,eAA3B,UACC,4BAAIyC,EAAKqB,OACT,oCAAOrB,EAAKI,UACXJ,EAAKK,WACL,8BACEC,YACA,IAAIC,KAAKP,EAAKK,WACd,IAAIE,MACD,IAJL,SASiB,YAAjBjE,EAAMc,QACN,wBACCoC,KAAK,SACLjC,UAAU,qBACVF,QAAS,kBA3KG,SAAC8F,GACrB3E,MAAM,wDAAD,OAAyDgD,EAAzD,qBAAwE2B,GAAa,CACzF1E,OAAQ,SACRC,QAAS,CACR,eAAgB,mBAChB0C,cAAe,UAAY9E,EAAMA,OAElCqC,KAAMC,KAAKC,UAAU,CACpB2C,GAAI2B,EACJC,QAAS5B,MAERpC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAC9B,IAAMoC,EAAcK,EAAKlB,SAASc,QAAO,SAAAR,GAAC,OAAIA,EAAEJ,MAAQqC,KACxDpB,EAAQ,2BAAID,GAAL,IAAWL,iBAClBe,EAAW,IA6JYb,CAAa3B,EAAKc,UAjB1Bb,aC9JFoD,G,MAzDH,WAEX,MAA0BxF,mBAAS,IAAnC,mBAAOgC,EAAP,KAAcC,EAAd,KAFiB,4CAKjB,8BAAAmC,EAAA,+EAEoBzD,MACjB,wDAHH,cAEQS,EAFR,gBAKwBA,EAAIC,OAL5B,OAKQyD,EALR,OAME7C,EAAS6C,EAAQ9C,OANnB,kDAQEP,QAAQsD,MAAR,MARF,2DALiB,sBAqBhB,OAJDxE,qBAAU,YAjBO,mCAkBhBkF,KACE,CAACzD,EAAMgB,SAGT,qBAAKtD,UAAU,YAAf,SACC,eAAC,IAAD,WACC,cAAC,EAAD,IAEC,eAAC,IAAD,WAEA,cAAC,IAAD,CAAOgG,OAAK,EAACC,KAAK,aAAaC,QAAS,cAAC,EAAD,MAExC,cAAC,IAAD,CACCF,OAAK,EACLC,KAAK,kBACLC,QACC,cAAC,EAAD,CAAO5D,MAAOA,EAAOC,SAAUA,MAIjC,cAAC,IAAD,CACCyD,OAAK,EACLC,KAAK,sBACLC,QAAS,cAAC,EAAD,CAAU5D,MAAOA,EAAOC,SAAUA,MAG5C,cAAC,IAAD,CACCyD,OAAK,EACLC,KAAK,qBACLC,QAAS,cAAC,EAAD,CAAS5D,MAAOA,EAAOC,SAAUA,SAI5C,cAAC,EAAD,WCvDJ4D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.96f3e9fb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/comments.475722ba.svg\";","import { createSlice } from \"@reduxjs/toolkit\"\n\nexport const tokenSlice = createSlice({\n\tname: 'token',\n\tinitialState: {\n\t\ttoken: '',\n\t},\n\treducers: {\n\t\tsetToken: (state, action) => {\n\t\t\tstate.token = action.payload\n\t\t},\n\t},\n})\n\nexport const { setToken } = tokenSlice.actions\n\nexport default tokenSlice.reducer","import { configureStore } from '@reduxjs/toolkit'\nimport tokenReducer from './token'\n\nexport default configureStore({\n    reducer: {\n        token: tokenReducer\n    }\n})","import React from 'react'\nimport '../styles/Navbar.css'\nimport { useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\n\nconst Navbar = () => {\n\tconst navigate = useNavigate()\n\n    const { token } = useSelector((state) => state.token)\n\n\treturn (\n\t\t<nav>\n\t\t\t<ul>\n\t\t\t\t{token.status === 'success' && (\n\t\t\t\t\t<li onClick={() => navigate('/blog-cms/posts')}>Home</li>\n\t\t\t\t)}\n\n\t\t\t\t{token.status !== 'success' && (\n\t\t\t\t\t<li onClick={() => navigate('/blog-cms/')}>Login</li>\n\t\t\t\t)}\n\n\t\t\t\t<li onClick={() => navigate('/blog-cms/new-post')}>New post</li>\n\t\t\t</ul>\n\t\t</nav>\n\t)\n}\n\nexport default Navbar","import React from 'react'\nimport '../styles/Footer.css'\n\nconst Footer = () => {\n\n    const handleClick = () => {\n        window.open('https://github.com/Jonthejon10')\n    }\n\n    return (\n\t\t<footer>\n\t\t\t<p>© Jonthejon10, 2021</p>\n\t\t\t<button className='github-button' onClick={handleClick}></button>\n\t\t</footer>\n\t)\n}\n\nexport default Footer","import React, {useEffect, useState}from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setToken } from './redux/token'\nimport '../styles/Login.css'\n\nconst Login = () => {\n    const navigate = useNavigate()\n\n\tconst dispatch = useDispatch()\n\n    const [user, setUser] = useState({})\n\n\tconst { token } = useSelector((state) => state.token)\n\t\n\n\tconst handleChange = (e) => {\n\t\tsetUser({\n\t\t\t...user,\n\t\t\t[e.target.name]: e.target.value,\n\t\t})\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault()\n        fetch('https://obscure-refuge-23971.herokuapp.com/api/login', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tusername: user.username,\n\t\t\t\tpassword: user.password,\n\t\t\t}),\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => dispatch(setToken(data)))\n\t\t\t.catch((err) => console.log(err))\n    }\n \tuseEffect(() => {\n\t\tif (token.status === 'success') {\n\t\t\tnavigate('/blog-cms/posts')\n\t\t}\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [token])\n    \n\treturn (\n\t\t<div className='content-container login-container'>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tname='username'\n\t\t\t\t\tplaceholder='Enter username'\n\t\t\t\t\trequired={true}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype='password'\n\t\t\t\t\tname='password'\n\t\t\t\t\tplaceholder='Enter password'\n\t\t\t\t\trequired={true}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t\t<input type='submit' />\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default Login","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport formatDistance from 'date-fns/formatDistance'\nimport { useSelector } from 'react-redux'\nimport '../styles/Posts.css'\n\nconst Posts = ({ posts, setPosts }) => {\n\n\tconst navigate = useNavigate()\n\n\t// Getting login token from redux\n\tconst { token } = useSelector((state) => state.token)\n\n\t// Change post visiblity\n\tconst handleVisibility = (postId) => {\n\t\tconst currPost = posts.find(x => x._id === postId)\n\n\t\tsetPosts([...posts].map(obj => {\n\t\t\tif (obj._id === currPost._id) {\n\t\t\t\treturn {\n\t\t\t\t\t...obj,\n\t\t\t\t\tvisible: !currPost.visible,\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn obj\n\t\t\t}\n\t\t}))\n\n\t\tfetch(`https://obscure-refuge-23971.herokuapp.com/api/posts/${postId}/update`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: 'Bearer ' + token.token,\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tauthor: currPost.author,\n\t\t\t\ttimestamp: currPost.timestamp,\n\t\t\t\ttitle: currPost.title,\n\t\t\t\ttext: currPost.text,\n\t\t\t\tcomments: currPost.comments,\n\t\t\t\tvisible: !currPost.visible,\n\t\t\t\trefId: currPost._id,\n\t\t\t}),\n\t\t}).catch((err) => console.log(err))\n\t}\n\n\t// Delete post\n\tconst handleDelete = (postId) => {\n\t\tfetch(\n\t\t\t`https://obscure-refuge-23971.herokuapp.com/api/posts/${postId}/delete`,\n\t\t\t{\n\t\t\t\tmethod: 'DELETE',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\tAuthorization: 'Bearer ' + token.token,\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tid: postId,\n\t\t\t\t}),\n\t\t\t}\n\t\t)\n\t\tconst filteredArr = posts.filter(x => x._id !== postId)\n\t\tsetPosts(filteredArr)\n\t}\n\t\n\treturn (\n\t\t<div className='content-container posts-container'>\n\t\t\t{token.status === 'success' &&\n\t\t\t\tposts.map((item, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={index} className={`post-container ${item.visible ? 'visible' : 'hidden'}`}>\n\t\t\t\t\t\t\t<h2>{item.title}</h2>\n\t\t\t\t\t\t\t<h3> by {item.author}</h3>\n\n\t\t\t\t\t\t\t{item.timestamp && (\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t{formatDistance(\n\t\t\t\t\t\t\t\t\t\tnew Date(item.timestamp),\n\t\t\t\t\t\t\t\t\t\tnew Date()\n\t\t\t\t\t\t\t\t\t)}{' '}\n\t\t\t\t\t\t\t\t\tago\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<div className='comments-container'>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\t\trequire('../images/comments.svg')\n\t\t\t\t\t\t\t\t\t\t\t.default\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span>{item.comments.length}</span>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='buttons-container'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='post-button'\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\tnavigate('/blog-cms/posts/' + item._id)\n\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\tOpen post\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='edit-buttons-container'>\n\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='post-admin-btn visible-post-btn'\n\t\t\t\t\t\t\t\t\tonClick={() => handleVisibility(item._id)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='post-admin-btn delete-post-btn'\n\t\t\t\t\t\t\t\t\tonClick={() => handleDelete(item._id)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})}\n\n\t\t\t{token.status !== 'success' && (\n\t\t\t\t<div className='failure-container'>\n\t\t\t\t\t<h2>\n\t\t\t\t\t\tAccess forbidden, <a href='/blog-cms/'>log in</a> first\n\t\t\t\t\t\t!\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default Posts","import React, { useState } from 'react'\nimport '../styles/Newpost.css'\nimport { useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\n\nconst Newpost = ({ posts, setPosts }) => {\n\tconst navigate = useNavigate()\n\n\tconst [post, setPost] = useState({\n\t\tcomments: [],\n\t})\n\n\t// Getting login token from redux\n\tconst { token } = useSelector((state) => state.token)\n\n\tconst handleChange = (e) => {\n\t\tsetPost({\n\t\t\t...post,\n\t\t\t[e.target.name]: e.target.value,\n\t\t})\n\t}\n\n\t// Submitting new post to backend\n\tconst handleSubmit = async (event) => {\n\t\tevent.preventDefault()\n\n\t\tfetch('https://obscure-refuge-23971.herokuapp.com/api/posts', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: 'Bearer ' + token.token,\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tauthor: 'Jonthejon10',\n\t\t\t\ttitle: post.title,\n\t\t\t\ttext: post.text,\n\t\t\t}),\n\t\t}).catch((err) => console.log(err))\n\n\t\tsetPosts([...posts, post])\n\t\tsetPost({ comments: [] })\n\t\tnavigate('/blog-cms/posts')\n\t}\n\n\treturn (\n\t\t<div className='content-container newpost-container'>\n\t\t\t{token.status === 'success' && (\n\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t<label htmlFor='title'>Title</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='title'\n\t\t\t\t\t\tid='title'\n\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<label htmlFor='text'>Text</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tid='text'\n\t\t\t\t\t\tname='text'\n\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\trows='5'\n\t\t\t\t\t\tcols='30'\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<input type='submit' />\n\t\t\t\t</form>\n\t\t\t)}\n\t\t\t{token.status !== 'success' && (\n\t\t\t\t<div className='failure-container'>\n\t\t\t\t\t<h2>\n\t\t\t\t\t\tAccess forbidden, <a href='/blog-cms/'>log in</a> first\n\t\t\t\t\t\t!\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default Newpost","import React, { useState, useEffect }from 'react'\nimport '../styles/Fullpost.css'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport formatDistance from 'date-fns/formatDistance'\nimport { useSelector } from 'react-redux'\n\nconst Fullpost = ({ posts, setPosts }) => {\n\tconst navigate = useNavigate()\n\n\t// Post id for reference\n\tconst { id } = useParams()\n\n\tconst [post, setPost] = useState({})\n\n\tconst [comment, setComment] = useState({})\n\n\t// Getting login token from redux\n\tconst { token } = useSelector((state) => state.token)\n\n\tconst [editPost, setEditPost] = useState(false)\n\n\tasync function fetchPostData() {\n\t\ttry {\n\t\t\tconst res = await fetch(\n\t\t\t\t`https://obscure-refuge-23971.herokuapp.com/api/posts/${id}`\n\t\t\t)\n\t\t\tconst resJson = await res.json()\n\t\t\tsetPost(resJson.post)\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t}\n\t}\n\n\t// Getting specific post data from db\n\tuseEffect(() => {\n\t\tfetchPostData()\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [id, comment])\n\n\t// Comment inputs\n\tconst handleChange = (e) => {\n\n\t\tsetComment({\n\t\t\t...comment,\n\t\t\t[e.target.name]: e.target.value,\n\t\t})\n\t}\n\n\t// New comment submit\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault()\n  \t\tfetch(\n\t\t\t`https://obscure-refuge-23971.herokuapp.com/api/posts/${id}/comments`,\n\t\t\t{\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tauthor: comment.author,\n\t\t\t\t\ttext: comment.text,\n\t\t\t\t\treference: id,\n\t\t\t\t}),\n\t\t\t}\n\t\t).catch((err) => console.log(err))\n\t\tconst newArr = post.comments.push(comment)\n\t\tsetPost({ ...post, newArr })\n\t\tsetComment({})\n\t}\n\n\t// Comment delete\n\tconst handleDelete = (commentId) => {\n\t\tfetch(`https://obscure-refuge-23971.herokuapp.com/api/posts/${id}/comments/${commentId}`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: 'Bearer ' + token.token,\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tid: commentId,\n\t\t\t\tpost_id: id,\n\t\t\t}),\n\t\t}).catch((err) => console.log(err))\n\t\tconst filteredArr = post.comments.filter(x => x._id !== commentId)\n\t\tsetPost({...post, filteredArr})\n\t\tsetComment({})\n}\n\n\t// Post edit inputs\n\tconst handleInputChange = (e) => {\n\t\tsetPost({\n\t\t\t...post,\n\t\t\t[e.target.name]: e.target.value,\n\t\t})\n\t}\n\t\n\t// Post edit submit to backend\n\tconst handlePostEdit = (e) => {\n\t\te.preventDefault()\n\t\tsetEditPost(false)\n\t\tfetch(`https://obscure-refuge-23971.herokuapp.com/api/posts/${id}/update`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: 'Bearer ' + token.token,\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tauthor: post.author,\n\t\t\t\ttimestamp: post.timestamp,\n\t\t\t\ttitle: post.title,\n\t\t\t\ttext: post.text,\n\t\t\t\tcomments: post.comments,\n\t\t\t\tvisible: post.visible,\n\t\t\t\trefId: id,\n\t\t\t}),\n\t\t}).catch((err) => console.log(err))\n\t\tsetPosts([...posts, post])\n\n\t\tsetPosts(\n\t\t\t[...posts].map((obj) => {\n\t\t\t\tif (obj._id === post._id) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...obj,\n\t\t\t\t\t\ttitle: post.title,\n\t\t\t\t\t\ttext: post.text,\n\t\t\t\t\t\tauthor: post.author,\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn obj\n\t\t\t\t}\n\t\t\t})\n\t\t)\n\t}\n\n\n\treturn (\n\t\t<div className='content-container fullpost-container'>\n\t\t\t<button\n\t\t\t\tclassName='styled-btn'\n\t\t\t\tonClick={() => navigate('/blog-cms/posts')}>\n\t\t\t\tGo back\n\t\t\t</button>\n\n\t\t\t<h1>{post.title}</h1>\n\t\t\t{editPost && (\n\t\t\t\t<form onSubmit={(e) => handlePostEdit(e)}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='title'\n\t\t\t\t\t\tvalue={post.title}\n\t\t\t\t\t\tonChange={(e) => handleInputChange(e)}\n\t\t\t\t\t/>\n\t\t\t\t\t<button type='submit' className='styled-btn'>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t)}\n\t\t\t<h3>by {post.author}</h3>\n\n\t\t\t{editPost && (\n\t\t\t\t<form onSubmit={handlePostEdit}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='author'\n\t\t\t\t\t\tvalue={post.author}\n\t\t\t\t\t\tonChange={(e) => handleInputChange(e)}\n\t\t\t\t\t/>\n\t\t\t\t\t<button type='submit' className='styled-btn'>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t)}\n\n\t\t\t{post.timestamp && (\n\t\t\t\t<p>\n\t\t\t\t\t{formatDistance(new Date(post.timestamp), new Date())} ago\n\t\t\t\t</p>\n\t\t\t)}\n\n\t\t\t<p className='post-text'>{post.text}</p>\n\n\t\t\t{editPost && (\n\t\t\t\t<form onSubmit={handlePostEdit}>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='text'\n\t\t\t\t\t\tvalue={post.text}\n\t\t\t\t\t\tonChange={(e) => handleInputChange(e)}\n\t\t\t\t\t/>\n\t\t\t\t\t<button type='submit' className='styled-btn'>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t)}\n\n\t\t\t<button\n\t\t\t\ttype='button'\n\t\t\t\tclassName='edit-post-btn'\n\t\t\t\tonClick={() => setEditPost(!editPost)}\n\t\t\t/>\n\n\t\t\t<form className='comments-form'onSubmit={handleSubmit}>\n\t\t\t\t<p>Got something to say ? </p>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\trequired={true}\n\t\t\t\t\tname='author'\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tplaceholder='Enter your name'></input>\n\t\t\t\t<textarea\n\t\t\t\t\ttype='text'\n\t\t\t\t\trequired={true}\n\t\t\t\t\tname='text'\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\trows='6'\n\t\t\t\t\tplaceholder='Enter your comment'></textarea>\n\t\t\t\t<button type='submit' className='styled-btn'>\n\t\t\t\t\tSubmit\n\t\t\t\t</button>\n\t\t\t</form>\n\n\t\t\t<div className='post-comments-container'>\n\t\t\t\t{post.comments &&\n\t\t\t\t\tpost.comments.map((item, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={index} className='post-comment'>\n\t\t\t\t\t\t\t\t<p>{item.text}</p>\n\t\t\t\t\t\t\t\t<p>by {item.author}</p>\n\t\t\t\t\t\t\t\t{item.timestamp &&\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t{formatDistance(\n\t\t\t\t\t\t\t\t\t\t\tnew Date(item.timestamp),\n\t\t\t\t\t\t\t\t\t\t\tnew Date()\n\t\t\t\t\t\t\t\t\t\t\t)}{' '}\n\t\t\t\t\t\t\t\t\t\tago\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t{token.status === 'success' && (\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\t\tclassName='comment-delete-btn'\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleDelete(item._id)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Fullpost","import React, { useState, useEffect }from 'react'\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\nimport Navbar from './components/Navbar'\nimport Footer from './components/Footer'\nimport Login from './components/Login'\nimport Posts from './components/Posts'\nimport Newpost from './components/Newpost'\nimport Fullpost from './components/Fullpost'\nimport './styles/App.css'\n\nconst App = () => {\n\n\tconst [posts, setPosts] = useState([])\n\n\t// Getting posts from backend\n\tasync function fetchData() {\n\t\ttry {\n\t\t\tconst res = await fetch(\n\t\t\t\t'https://obscure-refuge-23971.herokuapp.com/api/posts'\n\t\t\t)\n\t\t\tconst resJson = await res.json()\n\t\t\tsetPosts(resJson.posts)\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t}\n\t}\n\t\n\tuseEffect(() => {\n\t\tfetchData()\n\t}, [posts.length])\n\n  return (\n\t\t<div className='container'>\n\t\t\t<BrowserRouter>\n\t\t\t\t<Navbar />\n\n\t\t\t  <Routes>\n\t\t\t\t  \n\t\t\t\t\t<Route exact path='/blog-cms/' element={<Login />} />\n\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath='/blog-cms/posts'\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<Posts posts={posts} setPosts={setPosts} />\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath='/blog-cms/posts/:id'\n\t\t\t\t\t\telement={<Fullpost posts={posts} setPosts={setPosts} />}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath='/blog-cms/new-post'\n\t\t\t\t\t\telement={<Newpost posts={posts} setPosts={setPosts} />}\n\t\t\t\t\t/>\n\t\t\t\t</Routes>\n\n\t\t\t\t<Footer />\n\t\t\t</BrowserRouter>\n\t\t</div>\n  )\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './components/redux/store'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}